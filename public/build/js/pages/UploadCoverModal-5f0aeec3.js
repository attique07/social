import{_ as p,y as f,J as i,cp as g,r as l,o as h,c as u,b as c,a as _,w as m,d as C,t as w}from"../../assets/app-73d10358.js";import{f as B}from"./style-0c8b0731.js";const R={components:{Cropper:B,BaseButton:f},inject:{dialogRef:{default:null}},data(){return{image:this.dialogRef.data.imageData,loading:!1}},methods:{async cropCover(){let{canvas:t}=this.$refs.cropper.getResult();if(t){const a=new FormData;var e;if(t.width>i.COVER_WIDTH){e=document.createElement("canvas");var n=e.getContext("2d");e.width=i.COVER_WIDTH,e.height=i.COVER_HEIGHT,n.drawImage(t,0,0,t.width,t.height,0,0,e.width,e.height)}else e=t;e.toBlob(async r=>{let s=new File([r],"Cover.png",{type:"image/png"});if(a.append("file",s),!this.loading){this.loading=!0;try{const o=await g(a);this.dialogRef.close(o)}catch(o){this.showError(o.error)}finally{this.loading=!1}}})}}}},y={class:"text-end mt-base-2"};function E(t,e,n,a,r,s){const o=l("cropper"),d=l("BaseButton");return h(),u("div",null,[c(o,{ref:"cropper","stencil-props":{aspectRatio:5.2/2},"min-height":300,src:r.image},null,8,["src"]),_("div",y,[c(d,{loading:r.loading,onClick:s.cropCover},{default:m(()=>[C(w(t.$t("Crop Cover Image")),1)]),_:1},8,["loading","onClick"])])])}const D=p(R,[["render",E]]);export{D as default};
